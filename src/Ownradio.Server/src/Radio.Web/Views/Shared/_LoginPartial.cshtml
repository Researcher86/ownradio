@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (User.IsSignedIn())
{
    var user = await UserManager.FindByNameAsync(User.Identity.Name);

    <form asp-controller="Account" asp-action="LogOff" method="post" id="logoutForm">
        <a href="#" id="logout-trigger">
            <img class="picture" src="@user.PictureUrl" />
            <span class="caret"></span>
        </a>
        <div class="logout" id="logout">
            <button type="submit" class="btn btn-link">Log out</button>
        </div>
    </form>
}
else
{
    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal login-form" role="form">
        <button type="submit" class="btn btn-sm btn-default" name="provider" value="Facebook" title="Log in using your Facebook account">FB</button>
        <button type="submit" class="btn btn-sm btn-default" name="provider" value="VK" title="Log in using your VK account">VK</button>
    </form>
}
